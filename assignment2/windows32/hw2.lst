Microsoft (R) Macro Assembler Version 9.00.21022.08	    03/24/10 20:56:34
.\hw2.asm						     Page 1 - 1


				; Author:  E. Travers
				; Date:    3/2010

				.586
				.MODEL FLAT

				INCLUDE io.h                             ; header file for input/output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 

				.STACK 4096

 00000000			.DATA
 00000000 45 6E 74 65 72	     prompt1   BYTE    "Enter a number to add to the average: ", 0
	   20 61 20 6E 75
	   6D 62 65 72 20
	   74 6F 20 61 64
	   64 20 74 6F 20
	   74 68 65 20 61
	   76 65 72 61 67
	   65 3A 20 00
 00000027  00000028 [		     string    BYTE    40 DUP (?)
	    00
	   ]
 0000004F 00000000		     number1   DWORD   ?
 00000053 54 68 65 20 61	     resultLbl BYTE    "The average is", 0
	   76 65 72 61 67
	   65 20 69 73 00
 00000062 59 6F 75 20 65	     errorMsg  BYTE    "You entered no numbers!", 0
	   6E 74 65 72 65
	   64 20 6E 6F 20
	   6E 75 6D 62 65
	   72 73 21 00
 0000007A  0000000B [		     sum       BYTE    11 DUP (?), 0
	    00
	   ] 00

 00000000			.CODE
 00000000			_MainProc PROC
				     ; Problem: Compute the average of numbers,
				     ; possible number of inputs going up to 100.
				     ; Solution: As each one comes in, increment a counter, 
				     ; and keep adding the numbers together.
				     ; At the end, divide the sum of all the 
				     ; numbers by the counter, output result.   
				     
				     ; eax handles input, ebx handles the sum, ecx handles counter
				     
 00000000  BB 00000000		     mov       ebx, 0                    ; put zero in eax and ecx
 00000005  B9 00000000		     mov       ecx, 0
 0000000A  B8 00000000		     mov       eax, 0
				     
 0000000F			inputLoopx:
				     ; for each input
				     input     prompt1, string, 40       ; read ASCII characters
				     atod      string                    ; convert to integer
 0000003C  83 F8 00		     cmp       eax, 0                    ; see if it's zero
 0000003F  74 05		     je        outLoopx                  ; get out of the loop
 00000041  03 D8		     add       ebx, eax                  ; add the new number to eax's sum
 00000043  41			     inc       ecx
 00000044  EB C9		     jmp       inputLoopx
 00000046			outLoopx:
 00000046  83 F9 00		     cmp       ecx, 0                    ; make sure that numbers have been entered
 00000049  74 37		     je        noneEntered
				     ; now move the sum to eax, the divisor to ebx, and divide
 0000004B  8B C3		     mov       eax, ebx
 0000004D  99			     cdq
 0000004E  F7 F9		     idiv      ecx
				     
				     ; output result
				     dtoa      sum, eax
				     output    resultLbl, sum            ; output label and sum
				     
 00000081  C3			     ret
				     
 00000082			noneEntered:
				     output    errorMsg, errorMsg
 0000009B  C3			     ret
				     
 0000009C			_MainProc ENDP
				END                                      ; end of source code
Microsoft (R) Macro Assembler Version 9.00.21022.08	    03/24/10 20:56:34
.\hw2.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000086 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000009C Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000009C Public
  inputLoopx . . . . . . . . . .	L Near	 0000000F _TEXT	
  outLoopx . . . . . . . . . . .	L Near	 00000046 _TEXT	
  noneEntered  . . . . . . . . .	L Near	 00000082 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
errorMsg . . . . . . . . . . . .	Byte	 00000062 _DATA	
number1  . . . . . . . . . . . .	DWord	 0000004F _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
resultLbl  . . . . . . . . . . .	Byte	 00000053 _DATA	
string . . . . . . . . . . . . .	Byte	 00000027 _DATA	
sum  . . . . . . . . . . . . . .	Byte	 0000007A _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
