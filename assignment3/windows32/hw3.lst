Microsoft (R) Macro Assembler Version 9.00.21022.08	    04/13/10 08:30:48
.\hw3.asm						     Page 1 - 1


				; Author:  E. Travers
				; Date:    3/2010

				.586
				.MODEL FLAT

				INCLUDE io.h				 ; header file for input/output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 

				.STACK 4096

 00000000			.DATA

 00000000  000000C8 [		   thearray   DWORD   200 DUP (?)
	    00000000
	   ]
 00000320 45 6E 74 65 72	   prompt1    BYTE    "Enter a number to add to the sort: ", 0
	   20 61 20 6E 75
	   6D 62 65 72 20
	   74 6F 20 61 64
	   64 20 74 6F 20
	   74 68 65 20 73
	   6F 72 74 3A 20
	   00
 00000344 4F 6E 65 20 6F	   resultLbl  BYTE    "One of your results is: ",0
	   66 20 79 6F 75
	   72 20 72 65 73
	   75 6C 74 73 20
	   69 73 3A 20 00
 0000035D 54 6F 6F 20 6D	   ovrFlwlbl  BYTE    "Too many values entered!",0
	   61 6E 79 20 76
	   61 6C 75 65 73
	   20 65 6E 74 65
	   72 65 64 21 00
 00000376 4E 6F 20 64 61	   noItemsx   BYTE    "No data entered!",0
	   74 61 20 65 6E
	   74 65 72 65 64
	   21 00
 00000387			   string     BYTE    20 DUP (?)
 0000039B 00000000		   numElem    DWORD   ?

 00000000			.CODE
 00000000			_MainProc PROC

				; takes in a series of integers, sorts them, and prints them out in ascending order.

 00000000  B8 00000000		   mov        eax, 0
 00000005  BB 00000000		   mov        ebx, 0
 0000000A  B9 00000000		   mov        ecx, 0
 0000000F  BA 00000000		   mov        edx, 0

 00000014			inputLoopx:
				   ; get input, stop when you see a zero
				   input      prompt1, string, 40	 ; read ASCII characters
				   atod       string
 00000041  83 F8 00		   cmp	      eax, 0
 00000044  74 16		   je	      outLoopx
				   ; if not zero, then add to the array
 00000046  89 04 8D		   mov        thearray[4*ecx], eax
	   00000000 R
 0000004D  41			   inc        ecx
 0000004E  81 F9 000000C8	   cmp        ecx,200
 00000054  0F 84 00000082	   je         overFlowx
 0000005A  75 B8		   jne        inputLoopx
 0000005C			outLoopx:
 0000005C  83 F9 00		   cmp ecx, 0
 0000005F  0F 84 00000091	   je  noDatax
 00000065  41			   inc        ecx
 00000066  89 0D 0000039B R	   mov        numElem, ecx

				   ; now sort the array
				   ; for every item in the array in reverse order
				   
 0000006C			outerLoopx:
 0000006C  BA 00000000		   mov        edx, 0
 00000071			   innerLoopx:
				      ; take each item, compare it to 0 increasing, stop when you find it bigger than the previous
				      ; take the current item
 00000071  8B 04 8D		      mov     eax, thearray[4*ecx]
	   00000000 R
				      ; take the next item (inner loop)
 00000078  8B 1C 95		      mov     ebx, thearray[4*edx]
	   00000000 R
 0000007F  3B C3		      cmp     eax, ebx
 00000081  7C 0E		      jl      swapSkipx
				      
				      ; swap
 00000083  89 04 95		      mov     thearray[4*edx], eax
	   00000000 R
 0000008A  89 1C 8D		      mov     thearray[4*ecx], ebx
	   00000000 R
 00000091			   swapSkipx:
				   
 00000091  42			      inc     edx;
 00000092  3B CA		      cmp     ecx, edx
 00000094  75 DB		   jnz        innerLoopx
 00000096  E2 D4		loop outerLoopx  

 00000098  8B 0D 0000039B R	      mov     ecx, numElem
 0000009E  49			      dec     ecx
 0000009F			printx:
				      dtoa    string, thearray[(4*ecx)-4]                
				      output  resultLbl, string
 000000D5  49			      dec     ecx
 000000D6  83 F9 00		      cmp     ecx, 0
 000000D9  7F C4		      jg      printx
 000000DB  C3			      ret

 000000DC			overFlowx:
				      output  ovrFlwlbl,ovrFlwlbl
 000000F5  C3			      ret
 000000F6			noDatax:
				      output  noItemsx,noItemsx
 0000010F  C3			      ret
 00000110			_MainProc ENDP
				END					 ; end of source code
Microsoft (R) Macro Assembler Version 9.00.21022.08	    04/13/10 08:30:48
.\hw3.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000039F Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000110 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000110 Public
  inputLoopx . . . . . . . . . .	L Near	 00000014 _TEXT	
  outLoopx . . . . . . . . . . .	L Near	 0000005C _TEXT	
  outerLoopx . . . . . . . . . .	L Near	 0000006C _TEXT	
  innerLoopx . . . . . . . . . .	L Near	 00000071 _TEXT	
  swapSkipx  . . . . . . . . . .	L Near	 00000091 _TEXT	
  printx . . . . . . . . . . . .	L Near	 0000009F _TEXT	
  overFlowx  . . . . . . . . . .	L Near	 000000DC _TEXT	
  noDatax  . . . . . . . . . . .	L Near	 000000F6 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
noItemsx . . . . . . . . . . . .	Byte	 00000376 _DATA	
numElem  . . . . . . . . . . . .	DWord	 0000039B _DATA	
ovrFlwlbl  . . . . . . . . . . .	Byte	 0000035D _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000320 _DATA	
resultLbl  . . . . . . . . . . .	Byte	 00000344 _DATA	
string . . . . . . . . . . . . .	Byte	 00000387 _DATA	
thearray . . . . . . . . . . . .	DWord	 00000000 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
